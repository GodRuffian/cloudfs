---
# client在担任client的服务器需要指定client项
client:
    # 在没有指定选择的cloud时，默认使用的配置，在client角色的站点配置
    default: qiniu
    # 各类cloud的配置信息，如qiniu, abc
    qiniu:
        # 使用的云接口: qiniu
        driver: qiniu
        rpc:
            url: http://YOUR-RPC-URL/PATH
            server: qiniu
            client_id: YOUR-CLIENT-ID
            client_secret: YOUR-CLIENT-SECRET
        # callbacks:
        #    success: "\Name\To\Class::method"
        #    fail: "\Name\To\Class::method"
        #    always: "\Name\To\Class::method"
        # 用户自定义当前client支持的文件上传方式
        options:
            # mode: direct or via-server
            mode: direct
            # 当前云所使用的bucket
            bucket: BUCKET-NAME
            # 上传文件的地址
            url: http://up.qiniu.com/
            #也可以上传到本地
            #url: /ajax/cloudfs/qiniu/upload
            #browser/js上传成功后的客户端回调函数
            callback: /ajax/cloudfs/qiniu/parseData
            # 自定义数据
            # 数据传送给browser，browser在向云端上传文件时，将附带这些数据
            # 系统占用了'cfs:'开头的自定义变量，请使用时注意
            params:
                #以下是七牛支持的自定义变量
                #x:callbackUrl: http://YOUR-DOMAIN/ajax/cloudfs/qiniu/callback
                # CloudFS定义的，用无状态的保持client name
                #x:client: qiniu-client
                #x:callbackBody: key=$(key)&client=$(x:client)

# 在担任server的服务器需要指定server项
server:
    default: qiniu
    qiniu:
        driver: qiniu
        # 配置可以访问CloudFS Server的客户端
        clients:
            YOUR-CLIENT-ID: YOUR-CLIENT-SECRET
        # 除了driver和options为固定项外，其余项由DRIVER控制
        # callbacks:
        #     success: "\Name\To\Class::method"
        #     fail: "\Name\To\Class::method"
        #     always: "\Name\To\Class::method"
        # 比如：qiniu会有bucket，而ftp的方式可能就没有
        options:
            bucket: BUCKET-NAME
            #不同的cloud可能或有不同的配置
            accessKey: CLOUD-ACCESS-KEY
            secretKey: CLOUD-SECRET-KEY
...
